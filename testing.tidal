-- --bps (120 /60)
--
-- import qualified Sound.Tidal.Scales as Scales
--
-- let s = Scales.chromatic
--
--
-- d1 $ stack [
--  up (fmap fromIntegral $ (toScale s "8 [7 8] 6")) #sound "casio:1"
-- ]
--
-- d1 $ stack [
--  up (fmap fromIntegral $ (toScale s "8 [7 8] 6")) #sound "casio:1"
-- ]
--
-- d2 $ stack [
-- up (fmap fromIntegral $ (toScale s "6  [7 8] 6")) #sound "casio:1"
-- ]
--
-- d1 $ silence

do
d1 $ slow 4 $ n "bf6 [a6 bf6] g6" # s "superpiano"
    # pan 0.5
    # velocity 0.8
    # attack 1
    # decay 2
    # sustain 1
    # release 10
    # room 0.2
    # size 0.9
    # orbit 1
    # gain 0.9
    # cut 1


d2 $ slow 4 $ n "d4 ~ ~  c4 ~ ~  bf3 ~ ~ a3 ~ ~" # s "superpiano"
    # pan 0.5
    # attack 0.02
    # velocity 1
    # sustain 2
    # release 10
    # room 0.5
    # size 0.8
    # orbit 2
    # gain 1.15
    # cutoff 100
    -- Start cutoff 100 go to 1,000
    # cut 1


d6 $ slow 4 $ n "d7 [~ d7] ~  c7 [~ c7] ~  bf6 [~ bf6] ~ a6 [~ a6] ~" # s "superpiano"
    # pan 0.3
    # attack 0.06
    # velocity 0.8
    # sustain 2
    # release 100
    # room 1
    # orbit 3
    # gain 1

d7 $ slow 4 $ n " ~ ~ f5 ef5 ~ ~  d5 ~ ~ [c5 d5 bf4] c5 ~" # s "superpiano"
    # velocity 1
    # attack 0
    # room 1
    # orbit 5
    # gain 1.3
    # sustain 4
    # release 10

d8 $ slow 4 $ n "d4 ~ ~  c4 ~ ~  bf3 ~ ~ a3 ~ ~" # s "drum"
    # pan 0.5
    # attack 0.02
    # velocity 1
    # sustain 4
    # release 7
    # room 1
    # orbit 2
    # gain 3
    # cutoff 800




d1 silence
hush
